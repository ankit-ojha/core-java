Java Autoboxing - Primitive Type to Wrapper Object
Java Unboxing - Wrapper Objects to Primitive Types
// autoboxing
Integer aObj = 56;

// unboxing
int a = aObj;
------------------------------------------------------------------------------------------------------------------------

JVM(Java Virtual Machine) is an abstract machine that allows computer to run Java Programs
When running a program, Java Compilers compiles the java code to byte code
JVM then translates the byte code to machine code
Since JVM executes the Java Byte Code which platform independent, hence Java is also platform independent

------------------------------------------------------------------------------------------------------------------------

JRE (Java Runtime Environment) is a software package that provides
Java class libraries, Java Virtual Machine (JVM), and other components that are required to run Java applications.

JRE is a superset of JVM
JRE = JVM + Class Libraries

If you want to run Java Programs and not develop them, JRE is what you need.

------------------------------------------------------------------------------------------------------------------------

JDK (Java Development Kit) is a software development kit required to develop applications in Java.
When you download JDK, JRE is also downloaded with it.

JDK = JRE (JVM + Class Libraries) + Compilers + Debuggers + JavaDoc

------------------------------------------------------------------------------------------------------------------------

There are 8 primitive data types
boolean (true and false, DF=false), byte (-128 to 127, DF=0), short (-32768 to 32767, DF=0), int (-2 power 31 to 2 power 32-1, DF=0), long (-2 power 63 to 2 power 63-1, DF=0), float (32 bit, default = 0.0f), double (64 bit, default = 0.0d), char

------------------------------------------------------------------------------------------------------------------------

Operators

1. Arithmetic
2. Assignment
3. Relational
4. Unary
5. Logical
6. Bitwise


instance of, ternary


------------------------------------------------------------------------------------------------------------------------

Association of method call to the method body is known as binding.
Two Types
1. Static or Early or Compile Time Binding
2. Dynamic or Late or Run Time Binding

Binding of static, private and final methods is compile time binding (as these methods cannot be overridden) (overloading is an example)
When compiler is not able to resolve the call/binding at compile time, such binding is known as Dynamic or late Binding. (method overriding is an example)
